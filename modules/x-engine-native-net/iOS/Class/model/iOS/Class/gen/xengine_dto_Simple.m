
// DO NOT MODIFY!.
// generated by x-cli, it will be overwrite eventually!


#import "xengine_dto_Simple.h"


@implementation SimpleReq
    + (BOOL)propertyIsOptional:(NSString *)propertyName {
      
      return NO;
    }
    
@end

  
@implementation SimpleRes
    + (BOOL)propertyIsOptional:(NSString *)propertyName {
      
      return NO;
    }
    
@end


@implementation gen_SimpleApi


- (NSString*) getMethod{
    return @"POST";
}


- (NSString*) getUrl{
   return [NSString stringWithFormat:@"https://httpbin.org/post"];
}

- (void) request:(SimpleApiResponse) response{
    self.network = [NSMutableURLRequest new];
    self.network.URL =[NSURL URLWithString:[self getUrl]];
    self.network.HTTPMethod = [self getMethod];
    self.network.HTTPBody = self.reqDTO.toJSONData;
    [self addFiltersWithNetwork:self.network];
    [self.network send:^(id  _Nullable data, NSURLResponse * _Nullable res, NSError * _Nullable error) {
        NSError* err;
        id resPost = [[SimpleRes alloc] initWithDictionary:data error:&err];
        response(resPost,res,[self errorWrapper:error underlyingError:err]);
    }];
}

- (FBLPromise<SimpleRes *>*) promise:(SimpleReq*) reqDTO{
    FBLPromise<SimpleRes *>* promise = [FBLPromise async:^(FBLPromiseFulfillBlock fulfill, FBLPromiseRejectBlock reject) {
        self.network = [NSMutableURLRequest new];
        self.network.URL =[NSURL URLWithString:[self getUrl]];
        self.network.HTTPMethod = [self getMethod];
        self.network.HTTPBody = reqDTO.toJSONData;
        [self addFiltersWithNetwork:self.network];
        [self.network send:^(id  _Nullable data, NSURLResponse * _Nullable res, NSError * _Nullable error) {
            if(!error){
                NSError* err;
                id resPost = [[SimpleRes alloc] initWithDictionary:data error:&err];
                if(!err)
                 fulfill(resPost);
                else
                    reject(err);
            }else{
                reject(error);
            }
        }];
    }];
    return promise;
}

- (FBLPromise<SimpleRes *>*) promise{
    return [self promise:self.reqDTO];
}

@end


